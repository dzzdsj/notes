WITH RECURSIVE cte AS (
    -- 基础情况：选取根节点，即没有父节点的记录，或者指定一个起始的parent_id
    SELECT id, parent_id, CAST(id AS CHAR(255)) AS path, 1 AS depth
    FROM t_menu
    WHERE parent_id IS NULL 
    # where id = 'YOUR_SPECIFIED_PARENT_ID'
    UNION ALL
  
    -- 递归情况：连接子节点到它们的父节点上
    SELECT child.id, child.parent_id, CONCAT(parent.path, '->', child.id) AS path, parent.depth + 1
    FROM t_menu AS child
    JOIN cte AS parent ON child.parent_id = parent.id
)
SELECT * FROM cte;

--使用substring不严谨，1和11会被认为是相同的
-- 使用自连接和子查询来找到每个路径的最长版本
SELECT t1.*
FROM cte t1
LEFT JOIN cte t2
ON t1.path = SUBSTRING(t2.path, 1, LENGTH(t1.path)) AND t1.depth < t2.depth
WHERE t2.path IS NULL;

SELECT t1.id, t1.parent_id, MAX(t1.path) AS path, t1.depth
FROM cte t1
GROUP BY t1.id, t1.parent_id, t1.depth;


